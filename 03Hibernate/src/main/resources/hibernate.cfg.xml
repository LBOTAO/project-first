<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
        <!--第一部分   连接数据库的信息-->
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="hibernate.connection.url">jdbc:mysql:///hibernatetest</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">123</property>
        <!-- 数据库的方言 -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>

        <!--hibernate 配置c3p0连接池-->
        <property name="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</property>

        <!--第二部分 hibernate的可选配置-->
        <property name="hibernate.show_sql">true</property>  <!--显示打印sql语句-->
        <property name="hibernate.format_sql">true</property>  <!--格式化输出sql语句-->
        <!--update检测实体类与数据库的表结构是否一致 如果不一致则更新数据表与其相关的取值有
        create 启动hibernate时，自动删除原来的表，新建所有的表，所以每次启动后的以前数据都会丢失。
        create-drop：启动hibernate时，自动创建表，程序关闭时，自动把相应的表都删除。所以程序结束时，表和数据也不会再存在。
        validate：
        每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值
        -->
        <property name="hibernate.hbm2ddl.auto">update</property>

        <!-- 把session和线程绑定，从而实现一个线程只有一个Session -->
        <property name="hibernate.current_session_context_class">thread</property>

        <!--关联小配置文件-->
        <mapping resource="cn/happy/day01base/entity/Customer.hbm.xml"></mapping>

        <mapping resource="cn/happy/day02mapping/onetomany/entity/Customer.hbm.xml"></mapping>
        <mapping resource="cn/happy/day02mapping/onetomany/entity/LinkMan.hbm.xml"></mapping>
        <mapping resource="cn/happy/day02mapping/manytomany/entity/SysRole.hbm.xml"></mapping>
        <mapping resource="cn/happy/day02mapping/manytomany/entity/SysUser.hbm.xml"></mapping>

    </session-factory>
</hibernate-configuration>